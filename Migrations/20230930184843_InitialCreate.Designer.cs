// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trabalho;

#nullable disable

namespace Trabalho_WEB_API_C_.Migrations
{
    [DbContext(typeof(BaseDeDados))]
    [Migration("20230930184843_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("Trabalho.Agendamento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("medicoid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("pacienteid")
                        .HasColumnType("INTEGER");

                    b.Property<float?>("valor")
                        .HasColumnType("REAL");

                    b.HasKey("id");

                    b.HasIndex("medicoid");

                    b.HasIndex("pacienteid");

                    b.ToTable("Agendamentos");
                });

            modelBuilder.Entity("Trabalho.Especialidade", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("nome")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Especialidades");
                });

            modelBuilder.Entity("Trabalho.Medico", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("crm")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<int?>("especialidadeid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nome")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("especialidadeid");

                    b.ToTable("Medicos");
                });

            modelBuilder.Entity("Trabalho.Paciente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("cpf")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<string>("endereco")
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Pacientes");
                });

            modelBuilder.Entity("Trabalho.Agendamento", b =>
                {
                    b.HasOne("Trabalho.Medico", "medico")
                        .WithMany()
                        .HasForeignKey("medicoid");

                    b.HasOne("Trabalho.Paciente", "paciente")
                        .WithMany()
                        .HasForeignKey("pacienteid");

                    b.Navigation("medico");

                    b.Navigation("paciente");
                });

            modelBuilder.Entity("Trabalho.Medico", b =>
                {
                    b.HasOne("Trabalho.Especialidade", "especialidade")
                        .WithMany()
                        .HasForeignKey("especialidadeid");

                    b.Navigation("especialidade");
                });
#pragma warning restore 612, 618
        }
    }
}
